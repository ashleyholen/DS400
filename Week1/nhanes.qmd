---
title: "NHANES Challenge"
format: html
editor: visual
---

### Load Libraries

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(tidyverse)
library(haven)
library(here)
library(ggplot2)
library(janitor)
```

### Read-in Datasets for this Analysis:

-   DR1TOT_J.xpt as 'diet_behavior'
-   2017-2018_Hg-Blood.XPT as 'blood_hg'
-   2017-2018_Hg-Urine.XPT as 'urine_hg'
-   2017-2018_Diabetes.XPT as 'diabetes'

```{r}
diet_behavior <- read_xpt(here("data/nhanes_data/NSF-ALL-SPICE-Alliance DS400 main data-nhanes_data/DR1TOT_J.XPT"))
blood_hg <- read_xpt(here("data/nhanes_data/NSF-ALL-SPICE-Alliance DS400 main data-nhanes_data/2017-2018_Hg-Blood.XPT"))
urine_hg <- read_xpt(here("data/nhanes_data/NSF-ALL-SPICE-Alliance DS400 main data-nhanes_data/2017-2018_Hg-Urine.XPT"))
diabetes <- read_xpt(here("data/nhanes_data/NSF-ALL-SPICE-Alliance DS400 main data-nhanes_data/2017-2018_Diabetes.XPT"))
demographics <- read_xpt(here("data/nhanes_data/NSF-ALL-SPICE-Alliance DS400 main data-nhanes_data/2017-2018_Demographics.XPT"))
```

### Subset Read-in Datasets

Subset 'diet_behavior' as 'diet'

```{r}
diet <- select(diet_behavior, SEQN, DRD360, DRD370B, DRD370BQ, DRD370Q, DRD370QQ)
```

Subset 'diabetes' as 'tiid'

```{r}
tiid <- select(diabetes, SEQN, DIQ010)
```

Subset 'blood_hg' as 'bhg'

```{r}
bhg <- select(blood_hg, SEQN, LBXIHG, LBDIHGSI, LBXBGE, LBXBGM)
```

Subset "urine_hg' as 'uhg'

```{r}
uhg <- select(urine_hg, SEQN, URXUHG)
```

### Merge Subsets Into A Working Dataframe as 'df'

```{r}
df <- list(diet, tiid, bhg, uhg)

df <- df %>% reduce(full_join, by = 'SEQN')
```

1.  Filter Dataframe df for the following:

```{r}
# Assuming your dataframe is named `nhanes_data`
df <- df %>%
  # Filter out rows where DIQ010 or DRD360 are NA
  filter(!is.na(DIQ010), !is.na(DRD370B)) %>%
  # Keep only rows where DIQ010 and DRD360 are 1 or 2
  filter(DIQ010 %in% c(1, 2), DRD370B %in% c(1, 2)) %>%
  # Recode 1 to "Yes" and 2 to "No" for DIQ010 and DRD360
  mutate(
    DIQ010 = ifelse(DIQ010 == 1, "Has Diabetes", "No Diabetes"),
    DRD370B = ifelse(DRD370B == 1, "Consumes Ahi", "No Ahi")
  )
  
```

2.  Do some exploratory data analysis

```{r}
head(df)
```

```{r}
colnames(df)
```

```{r}
df_main <- df[, c("DIQ010", "DRD370B")]
df_main
```

```{r}
summary(df)
```

```{r}
summary(df_main)
```

```{r}
# Reshape data to long format
df_long <- df_main %>%
  pivot_longer(cols = c("DIQ010", "DRD370B"), names_to = "column", values_to = "response")

# Create the plot with separate panels
ggplot(df_long, aes(x = response, fill = response)) +
  geom_bar() +
  facet_wrap(~column) +  # This creates separate plots for each column
  geom_text(stat = "count", aes(label = ..count..), vjust = 0) +  # Add counts on top
  labs(title = "Yes/No Responses for DIQ010 and DRD370B", x = "Response", y = "Count") +
  theme_minimal()
```

```{r}
count_col1 <- table(df_main$DIQ010)
count_col2 <- table(df_main$DRD370B)

# Display counts
count_col1
count_col2
```

1.  Determine the prior probability that someone has diabetes (DIQ010)

-   P(B) =

    ```         
    0.1287574
    ```

```{r}
df_main %>% 
  tabyl(DIQ010) %>% 
  adorn_totals("row")
```

2.  Determine the prior probability that someone eats tuna (DRD370B)
    -   P(A) =

        ```         
        0.3609467
        ```

```{r}
df_main %>% 
  tabyl(DRD370B) %>% 
  adorn_totals("row")
```

3.  Determine the likelihood of eating tuna and having diabetes

-   L(B\|A) =

    ```{r}
    df_main %>% 
      tabyl(DIQ010, DRD370B) %>% 
      adorn_percentages("row")

    liklihood_of_tuna_and_diabetes = 0.3584559
    ```

4.  Determine posterior probability via bayes theorem

-   P(B\|A) =

```{r}
prob_diabetes = 0.1287574
prob_tuna = 0.3609467
liklihood_of_tuna_and_diabetes = 0.3584559
```

```{r}
# Calculate P(B|A): p_B_given_A <- p_A_and_B / p_A
prob_diabetes_given_they_eat_tuna = liklihood_of_tuna_and_diabetes / prob_tuna
prob_diabetes_given_they_eat_tuna
```

5.  What other questions can we ask of this data?

Bayes Theorem

P(B\|A) = P(B) L(B\|A) / P(A)

B \<- has diabetes

A \<- consumes ahi

P(B) \<- the probability that a person has diabetes

```{r}
df %>%
  tabyl(DIQ010)
```

```{r}
probability_has_diabetes <- 0.13
```

THESE ARE THE SAME THING: L(B\|A) = P(A\|**B**) \*given that B, this is the part that we want to add up to 100% when doing the adorn

```{r}
df %>%
  tabyl(DRD370B, DIQ010) %>%
  adorn_percentages("col")
```

```{r}
probability_consumes_ahi_given_diabetes <- 0.36
```

P(A) \<- probability someone consumes ahi

```{r}
df %>% 
  tabyl(DRD370B)
```

```{r}
probability_consumes_ahi <- 0.36
```

P(B\|A) \<- probability someone has diabetes given they consume ahi

```{r}
(probability_has_diabetes * probability_consumes_ahi_given_diabetes / probability_consumes_ahi)
```

Since pre and post probabilities are both 0.13, shows that these are independent events just when looking at this example of bayes theorem. There are other factors that we can also apply such as age.

Diabetes & Age

```{r}
demographics <- demographics %>%
  select(SEQN, RIDRETH1, RIAGENDR, RIDAGEYR)
```

```{r}
nhanes_data <- left_join(df, demographics, by = "SEQN")
```

```{r}
nhanes_data <- nhanes_data %>%
  mutate(age_bracket = ifelse(RIDAGEYR > 40, "old", "young"))
```

```{r}
ggplot(nhanes_data, aes(x = RIDAGEYR, fill = DIQ010)) + geom_density(alpha = 0.5)
```

P(B\|A)

B \<- has diabetes

A \<- old, over 40
